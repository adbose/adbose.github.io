
   <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
     <channel>
       <title>git on Aditya Bose</title>
       <link>https://adbose.github.io/tags/git/</link>
       <description>Recent content in git on Aditya Bose</description>
       <generator>Hugo -- gohugo.io</generator>
       <copyright>Copyright &amp;copy; 2020 - Aditya Bose</copyright>
       <lastBuildDate>Sat, 06 Jun 2020 15:34:23 +0530</lastBuildDate>
       
           <atom:link href="https://adbose.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
       
       
       <item>
         <title>How to Git</title>
         <link>https://adbose.github.io/posts/05/</link>
         <pubDate>Sat, 06 Jun 2020 15:34:23 +0530</pubDate>
         
         <guid>https://adbose.github.io/posts/05/</guid>
         <description>&lt;h3 id=&#34;a-primer-on-source-control-using-git&#34;&gt;A primer on source control using Git&lt;/h3&gt;
&lt;p&gt;Git is an open source distributed version control system created by Linus Torvalds in 2005 for collaborating with other developers contributing to the Linux kernel.&lt;/p&gt;
&lt;p&gt;Although Git is used primarily by programmers for tracking changes in source code during software development, it can be used for tracking changes in any set of files.&lt;/p&gt;
&lt;p&gt;This post is a quick introduction to Git covering the most important commands needed to use Git in your projects.&lt;/p&gt;
&lt;p&gt;A Git project will have the following three main sections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git directory&lt;/li&gt;
&lt;li&gt;Working directory (or working tree)&lt;/li&gt;
&lt;li&gt;Staging area&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Git directory (located in YOUR-PROJECT-PATH/.git/) is where Git stores everything it needs to accurately track the project. This includes metadata and an object database which includes compressed versions of the project files.&lt;/p&gt;
&lt;p&gt;The working directory is where a user makes local changes to a project. The working directory pulls the project’s files from the Git directory’s object database and places them on the user’s local machine.&lt;/p&gt;
&lt;p&gt;The staging area is a file (also called the “index”, “stage”, or “cache”) that stores information about what will go into your next commit. Staging is therefore the process of adding or removing files to the staging area to be committed. A commit is when you tell Git to save these staged changes. Git takes a snapshot of the files as they are and permanently stores that snapshot in the Git directory.&lt;/p&gt;
&lt;h3 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;To use Git in your projects, you need to first install it (if not already installed) in your system by following the instructions &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Verify if Git is installed by using the following command in the terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git --version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Next, configure your Git environment by setting certain configuration variable susing the &lt;code&gt;git config&lt;/code&gt; tool.&lt;/p&gt;
&lt;p&gt;There are three levels where these configuration variables are stored:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System: located in /etc/gitconfig, applies default settings to every user of the computer. To make changes to this file, use the &amp;ndash;system option with the git config command.&lt;/li&gt;
&lt;li&gt;User: located in ~/.gitconfig or ~/.config/git/config, applies settings to a single user. To make changes to this file, use the &amp;ndash;global option with the git config command.&lt;/li&gt;
&lt;li&gt;Project: located in YOUR-PROJECT-PATH/.git/config, applies settings to the project only. To make changes to this file, use the git config command.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To see all your configuration settings, use the command &lt;code&gt;git config --list&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;initialize-git-in-a-project&#34;&gt;Initialize Git in a Project&lt;/h3&gt;
&lt;p&gt;Once Git is installed and configured on your computer, you need to initialize it in your project to start using it for version control.&lt;/p&gt;
&lt;p&gt;In the command line, use the &lt;code&gt;cd&lt;/code&gt; command to navigate to the root level directory of your project, and run the command &lt;code&gt;git init&lt;/code&gt;. This installs a &lt;strong&gt;Git directory&lt;/strong&gt; (&lt;code&gt;.git/&lt;/code&gt; folder with all the files and objects Git needs to track your project.&lt;/p&gt;
</description>
       </item>
       
     </channel>
   </rss>


   <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
     <channel>
       <title>twiliohackathon on Aditya Bose</title>
       <link>https://adbose.github.io/tags/twiliohackathon/</link>
       <description>Recent content in twiliohackathon on Aditya Bose</description>
       <generator>Hugo -- gohugo.io</generator>
       <copyright>Copyright &amp;copy; 2020 - Aditya Bose</copyright>
       <lastBuildDate>Sat, 09 May 2020 20:47:09 +0530</lastBuildDate>
       
           <atom:link href="https://adbose.github.io/tags/twiliohackathon/index.xml" rel="self" type="application/rss+xml" />
       
       
       <item>
         <title>Twilio Hackathon 2020</title>
         <link>https://adbose.github.io/posts/03/</link>
         <pubDate>Sat, 09 May 2020 20:47:09 +0530</pubDate>
         
         <guid>https://adbose.github.io/posts/03/</guid>
         <description>&lt;p&gt;Over the past month, I have been hacking around with the Twilio API for WhatsApp to create some simple bots by following their documentation and tutorials.&lt;/p&gt;
&lt;p&gt;Twilio was hosting a hackathon throughout April on &lt;a href=&#34;https://dev.to/devteam/announcing-the-twilio-hackathon-on-dev-2lh8&#34;&gt;Dev&lt;/a&gt; to solve challenges in communication, and one of the themes was the ongoing Coronavirus pandemic.
This seemed like a good opportunity to test out my ideas for a Covid Tracker as a WhatsApp bot.&lt;/p&gt;
&lt;p&gt;We have already seen how we can import twilio to a python script to use it&amp;rsquo;s APIs to send messages to users.&lt;/p&gt;
&lt;p&gt;In this project, we would create a Flask app and use Twilio&amp;rsquo;s &lt;code&gt;twiml&lt;/code&gt; APIs to send meaningful information based on user queries.&lt;/p&gt;
&lt;p&gt;Our original intent from the &lt;a href=&#34;../01&#34;&gt;first&lt;/a&gt; post was to be able to get notified on the latest Covid-19 case stats. The easy solution that I wanted to implement was a Twitter bot that tweets every time it receives updated stats from it&amp;rsquo;s trusted data sources. Since I have yet not recevied **Developer access for Twitter, I deceided to implement an information system related to Covid-19 over WhatsApp. It is not free to send self initiated messages, and to be able to send such messages, one needs to apply for a Business Account with WhatsApp which again goes through an approval process which again takes several weeks. We are gonna worry about all that later, and start building and testing right away using the Twilio Sandbox for WhatsApp.&lt;/p&gt;
&lt;p&gt;My main objective for the Hackathon was to show daily and total Covid-19 cases in India. Using the location services of WhatsApp, we could also get nearby case statistics andn essential services information for users to have an idea of the neighbourhood they are in.&lt;/p&gt;
&lt;p&gt;The project is developed using Python3.8 with the Flask web microframework, and uses Twilio&amp;rsquo;s Programmable SMS API for WhatsApp. Let us start by first installing &lt;code&gt;flask&lt;/code&gt; and &lt;code&gt;twilio&lt;/code&gt; in a new virtual environment, after which we can start developing by importing these dependencies in our code.&lt;/p&gt;
&lt;p&gt;The next step is to source the data. For country level and total global Covid-19 stats, Worldometers is probably the most popular site on the Internet. They have paid licences starting $35/month to access their data APIs, but I didn&amp;rsquo;t wish to pay any money to get started with the project which is mainly an experimental one for educational purposes. So, using an open source MIT licence for fair and non-commercial use, I assumed I could safely scrape the publicly available data from their site and get all the country level stats at a given moment.&lt;/p&gt;
&lt;p&gt;Given below is a script that we could write to fetch the current stats from Worldometers on the global cases, deaths and recoveries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    response = requests.get(&#39;https://www.worldometers.info/coronavirus/&#39;)
    doc = html.fromstring(response.content)
    country_names = doc.xpath(
            &#39;//table[@id=&amp;quot;main_table_countries_today&amp;quot;]/tbody/tr/td[2]/a[contains(@href, &amp;quot;country/&amp;quot;)]/text()&#39;)
            print(country_names)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The result will be a list of names of countries as they are written in the Worldometers site in the main stats table.
To scrape the website more reliably, I decided to use the &lt;code&gt;lxml&lt;/code&gt; Python package to parse the site XML using &lt;code&gt;xpath&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Luckily, getting India specific data is easier. The site &lt;a href=&#34;covid19india.org&#34;&gt;covid19india.org&lt;/a&gt; provides a free and open JSON API which we can access using simple HTTP GET requests to get state level, district level, patient level, and overall stats. The data is crowdsourced and maintained by the volunteers involved with the project. Check out the API information page &lt;a href=&#34;https://api.covid19india.org/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We use the &lt;code&gt;requests&lt;/code&gt; Python package and Python&amp;rsquo;s inbuild &lt;code&gt;json&lt;/code&gt; module to send a request to an API and get response in a Python data type which will be the JSON equivalent of the data like a &lt;em&gt;dict&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A typical request and response code would look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    response = requests.get(api_url)
    return response.json()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When users send their location in their message, we obtain the location coordinates from the &lt;code&gt;request.values&lt;/code&gt; object of the request payload that WhatsApp receives. To encode and decode locations and places, we can use a third party geolocation service like Google Maps API. For the purposes of the hackathon, I used the free and public &lt;a href=&#34;https://nominatim.org/&#34;&gt;Nominatim Open Street Map API&lt;/a&gt; from the &lt;code&gt;geopy&lt;/code&gt; Python package.
Using the location data, we were able to provide case stats by district, zone information, as well as essential services available nearby.&lt;/p&gt;
&lt;h3 id=&#34;using-the-bot&#34;&gt;Using The Bot&lt;/h3&gt;
&lt;p&gt;The app is hosted for free on &lt;a href=&#34;https://heroku.com&#34;&gt;Heroku&lt;/a&gt;. You can start interacting with the bot right now by sending the message &lt;code&gt;join came-told&lt;/code&gt; to Twilio&amp;rsquo;s shared WhatsApp number.&lt;/p&gt;
&lt;p&gt;You can find the code for the project on &lt;a href=&#34;https://github.com/adbose/covid-india-whatsapp-tracker&#34;&gt;Github&lt;/a&gt; along with the instructions to clone and run it locally with the Twilio Sandbox for WhatsApp using &lt;code&gt;ngrok&lt;/code&gt; to expose the local instance of your app to Twilio&amp;rsquo;s webhook endpoint URL.
You can also read my submission post on &lt;a href=&#34;https://dev.to/adbose/twilio-hackathon-submission-a-location-based-covid-19-whatsapp-tracker-for-india-1oi3&#34;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stay tuned for more updates on this project!&lt;/p&gt;
</description>
       </item>
       
     </channel>
   </rss>

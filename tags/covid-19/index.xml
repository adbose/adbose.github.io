
   <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
     <channel>
       <title>covid-19 on Aditya Bose</title>
       <link>https://adbose.github.io/tags/covid-19/</link>
       <description>Recent content in covid-19 on Aditya Bose</description>
       <generator>Hugo -- gohugo.io</generator>
       <copyright>Copyright &amp;copy; 2020 - Aditya Bose</copyright>
       <lastBuildDate>Sat, 16 May 2020 13:56:48 +0530</lastBuildDate>
       
           <atom:link href="https://adbose.github.io/tags/covid-19/index.xml" rel="self" type="application/rss+xml" />
       
       
       <item>
         <title>Covid-19 Stats Tweeter</title>
         <link>https://adbose.github.io/posts/04/</link>
         <pubDate>Sat, 16 May 2020 13:56:48 +0530</pubDate>
         
         <guid>https://adbose.github.io/posts/04/</guid>
         <description>&lt;p&gt;So I finally got developer account access from Twitter which I had applied for last &lt;a href=&#34;../01&#34;&gt;month&lt;/a&gt; to post automated coronavirus updates.
In this part, we will look at the process of creating an app, and developing the code to post tweets programmatically.&lt;/p&gt;
&lt;p&gt;We are going to use Python3 as our programming language and use the &lt;code&gt;tweepy&lt;/code&gt; python library to access Twitter&amp;rsquo;s APIs along with &lt;code&gt;lxml&lt;/code&gt; package to parse the Worldometers site for data. We need to install these dependencies in a new python virtual environment, and activate it to start developing.&lt;/p&gt;
&lt;p&gt;First, we go to the &lt;a href=&#34;https://developer.twitter.com/en/apps&#34;&gt;apps page&lt;/a&gt; and create an app. We give an app name, add a description and a website url. dd description and a website url. At the bottom, we need to describe briefly how we are going to use the app, and press create.&lt;/p&gt;
&lt;p&gt;Once created, go to the &lt;em&gt;Keys and Tokens&lt;/em&gt; tab, and generate Access Token and Access Token Secret, and copy them along with the consumer API keys in a python file called &lt;em&gt;config.py&lt;/em&gt; as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CONSUMER_KEY = &#39;&amp;lt;API key&amp;gt;&#39;
CONSUMER_SECRET = &#39;&amp;lt;API secret key&amp;gt;&#39;
ACCESS_TOKEN = &#39;&amp;lt;Access token&amp;gt;&#39;
ACCESS_TOKEN_SECRET = &#39;&amp;lt;Access token secret&amp;gt;&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the same folder as &lt;em&gt;config.py&lt;/em&gt;, create another python file called &lt;em&gt;app.py&lt;/em&gt; and import the tweepy module, the keys from config and authenticate the app as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, create an API object and verify the access credentials as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;api = tweepy.API(auth)
api.verify_credentials()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We are now ready to compose our tweet and post it to Twitter.&lt;/p&gt;
&lt;p&gt;We use the &lt;code&gt;requests&lt;/code&gt; library to fetch the data for our tweet from Worldometers, parse it using &lt;code&gt;xpath&lt;/code&gt; and save it in a variable called &lt;em&gt;tweet&lt;/em&gt;. We can then post our tweet using a single line of code as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;api.update_status(tweet)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To post the tweet, simply run the &lt;em&gt;app.py&lt;/em&gt; from the console with the command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python app.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now have a basic Twitter bot ready, and can post tweets whenever we run our script. Feel free to checkout the code on &lt;a href=&#34;https://github.com/adbose/covid-tweeter&#34;&gt;Github&lt;/a&gt; and send PRs to improve this bot.&lt;/p&gt;
&lt;p&gt;Also, follow the bot &lt;a href=&#34;https://twitter.com/covidtrackerbot&#34;&gt;@covidtrackerbot&lt;/a&gt; on Twitter, and press the bell icon to get notified whenever there is a new tweet.&lt;/p&gt;
&lt;p&gt;Our next steps would be to host it online and add more functionality like tweeting periodically from an infinite loop, or tweeting country-wise stats as they are updated on Worldometer.&lt;/p&gt;
&lt;p&gt;Stay tuned for further updates!&lt;/p&gt;
</description>
       </item>
       
       <item>
         <title>Twilio Hackathon 2020</title>
         <link>https://adbose.github.io/posts/03/</link>
         <pubDate>Sat, 09 May 2020 20:47:09 +0530</pubDate>
         
         <guid>https://adbose.github.io/posts/03/</guid>
         <description>&lt;p&gt;Over the past month, I have been hacking around with the Twilio API for WhatsApp to create some simple bots by following their documentation and tutorials.&lt;/p&gt;
&lt;p&gt;Twilio was hosting a hackathon throughout April on &lt;a href=&#34;https://dev.to/devteam/announcing-the-twilio-hackathon-on-dev-2lh8&#34;&gt;Dev&lt;/a&gt; to solve challenges in communication, and one of the themes was the ongoing Coronavirus pandemic.
This seemed like a good opportunity to test out my ideas for a Covid Tracker as a WhatsApp bot.&lt;/p&gt;
&lt;p&gt;We have already seen how we can import twilio to a python script to use it&amp;rsquo;s APIs to send messages to users.&lt;/p&gt;
&lt;p&gt;In this project, we would create a Flask app and use Twilio&amp;rsquo;s &lt;code&gt;twiml&lt;/code&gt; APIs to send meaningful information based on user queries.&lt;/p&gt;
&lt;p&gt;Our original intent from the &lt;a href=&#34;../01&#34;&gt;first&lt;/a&gt; post was to be able to get notified on the latest Covid-19 case stats. The easy solution that I wanted to implement was a Twitter bot that tweets every time it receives updated stats from it&amp;rsquo;s trusted data sources. Since I have yet not recevied Developer access for Twitter, I deceided to implement an information system related to Covid-19 over WhatsApp. It is not free to send self initiated messages, and to be able to send such messages, one needs to apply for a Business Account with WhatsApp which again goes through an approval process which again takes several weeks. We are gonna worry about all that later, and start building and testing right away using the Twilio Sandbox for WhatsApp.&lt;/p&gt;
&lt;p&gt;My main objective for the Hackathon was to show daily and total Covid-19 cases in India. Using the location services of WhatsApp, we could also get nearby case statistics andn essential services information for users to have an idea of the neighbourhood they are in.&lt;/p&gt;
&lt;p&gt;The project is developed using Python3.8 with the Flask web microframework, and uses Twilio&amp;rsquo;s Programmable SMS API for WhatsApp. Let us start by first installing &lt;code&gt;flask&lt;/code&gt; and &lt;code&gt;twilio&lt;/code&gt; in a new virtual environment, after which we can start developing by importing these dependencies in our code.&lt;/p&gt;
&lt;p&gt;The next step is to source the data. For country level and total global Covid-19 stats, Worldometers is probably the most popular site on the Internet. They have paid licences starting $35/month to access their data APIs, but I didn&amp;rsquo;t wish to pay any money to get started with the project which is mainly an experimental one for educational purposes. So, using an open source MIT licence for fair and non-commercial use, I assumed I could safely scrape the publicly available data from their site and get all the country level stats at a given moment.&lt;/p&gt;
&lt;p&gt;Given below is a script that we could write to fetch the current stats from Worldometers on the global cases, deaths and recoveries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;response = requests.get(&#39;https://www.worldometers.info/coronavirus/&#39;)
doc = html.fromstring(response.content)
country_names = doc.xpath(
    &#39;//table[@id=&amp;quot;main_table_countries_today&amp;quot;]/tbody/tr/td[2]/a[contains(@href, &amp;quot;country/&amp;quot;)]/text()&#39;)
print(country_names)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The result will be a list of names of countries as they are written in the Worldometers site in the main stats table.
To scrape the website more reliably, I decided to use the &lt;code&gt;lxml&lt;/code&gt; Python package to parse the site XML using &lt;code&gt;xpath&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Luckily, getting India specific data is easier. The site &lt;a href=&#34;covid19india.org&#34;&gt;covid19india.org&lt;/a&gt; provides a free and open JSON API which we can access using simple HTTP GET requests to get state level, district level, patient level, and overall stats. The data is crowdsourced and maintained by the volunteers involved with the project. Check out the API information page &lt;a href=&#34;https://api.covid19india.org/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We use the &lt;code&gt;requests&lt;/code&gt; Python package and Python&amp;rsquo;s inbuild &lt;code&gt;json&lt;/code&gt; module to send a request to an API and get response in a Python data type which will be the JSON equivalent of the data like a &lt;em&gt;dict&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A typical request and response code would look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;response = requests.get(api_url)
return response.json()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When users send their location in their message, we obtain the location coordinates from the &lt;code&gt;request.values&lt;/code&gt; object of the request payload that WhatsApp receives. To encode and decode locations and places, we can use a third party geolocation service like Google Maps API. For the purposes of the hackathon, I used the free and public &lt;a href=&#34;https://nominatim.org/&#34;&gt;Nominatim Open Street Map API&lt;/a&gt; from the &lt;code&gt;geopy&lt;/code&gt; Python package.
Using the location data, we were able to provide case stats by district, zone information, as well as essential services available nearby.&lt;/p&gt;
&lt;h3 id=&#34;using-the-bot&#34;&gt;Using The Bot&lt;/h3&gt;
&lt;p&gt;The app is hosted for free on &lt;a href=&#34;https://heroku.com&#34;&gt;Heroku&lt;/a&gt;. You can start interacting with the bot right now by sending the message &lt;code&gt;join came-told&lt;/code&gt; to Twilio&amp;rsquo;s shared WhatsApp number.&lt;/p&gt;
&lt;p&gt;You can find the code for the project on &lt;a href=&#34;https://github.com/adbose/covid-india-whatsapp-tracker&#34;&gt;Github&lt;/a&gt; along with the instructions to clone and run it locally with the Twilio Sandbox for WhatsApp using &lt;code&gt;ngrok&lt;/code&gt; to expose the local instance of your app to Twilio&amp;rsquo;s webhook endpoint URL.
You can also read my submission post on &lt;a href=&#34;https://dev.to/adbose/twilio-hackathon-submission-a-location-based-covid-19-whatsapp-tracker-for-india-1oi3&#34;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stay tuned for more updates on this project!&lt;/p&gt;
</description>
       </item>
       
       <item>
         <title>Isolation</title>
         <link>https://adbose.github.io/posts/01/</link>
         <pubDate>Thu, 09 Apr 2020 02:29:14 +0530</pubDate>
         
         <guid>https://adbose.github.io/posts/01/</guid>
         <description>&lt;p&gt;It has been 100 days of Coronavirus today.&lt;/p&gt;
&lt;p&gt;On the last day of 2019, China announced it had detected a “pneumonia of unknown cause” in  Wuhan, the capital city of China&amp;rsquo;s Hubei province.
It was the first time the world got a notice of what was about to hit.
One hundred days later, the novel Coronavirus disease has spread to almost every country and has resulted in billions of people now living under lockdown.&lt;/p&gt;
&lt;p&gt;The Coronavirus disease 2019 (COVID-19) is an infectious disease caused by the Severe Acute Respiratory Syndrome Coronavirus 2 (SARS-CoV-2). Since the first mention of it appearing in Wuhan, it has spread now all over the globe, resulting in the ongoing 2019–20 coronavirus pandemic.&lt;/p&gt;
&lt;p&gt;So far, over a million people have been infected, close to a hundred thousand people have lost their lives, and the disease is still spreading exponentially.
Schools, universities, workplaces and businesses are shut down, people are losing their jobs, and the whole world is slowly falling into to an economic recession.&lt;/p&gt;
&lt;p&gt;While I am trying my best to stay productive and positive in my daily life working from home, I often find myself getting distracted by the urge to check for the latest news and stories on the current pandemic situation, or checking out sites like &lt;a href=&#34;https://www.covid19india.org&#34;&gt;India Covid-19 Tracker&lt;/a&gt;, &lt;a href=&#34;https://www.worldometers.info/coronavirus/&#34;&gt;Worldometers Coronavirus&lt;/a&gt;, etc. to get the latest statistics on Coronavirus cases.
These sites do a great job of presenting a lot of insightful information compiled from official sources.
But it would have been nicer if one could also get notified whenever new data gets updated on these sites, so that one doesn&amp;rsquo;t have to keep checking them back regularly.&lt;/p&gt;
&lt;p&gt;The solution is simple. I need to create a script that scrapes these sites for the latest data on coronavirus cases, and find a way to send those updates to me so that I won&amp;rsquo;t have to manually check them time and again.
If we can build a &lt;a href=&#34;https://twitter.com&#34;&gt;Twitter&lt;/a&gt; bot which would run that script at regular intervals to tweet out the stats whenever new data arrives, other people too can make use of this feature by subscribing to that Twitter handle.&lt;/p&gt;
&lt;p&gt;Twitter provides an &lt;a href=&#34;https://developer.twitter.com&#34;&gt;API&lt;/a&gt; through which users can interact with their platform programmatically.
The first step is to create a Twitter account, and &lt;em&gt;&lt;a href=&#34;https://developer.twitter.com/en/apply-for-access&#34;&gt;Apply for a developer account&lt;/a&gt;&lt;/em&gt; on the developer page.
After answering out some basic questionnaire, submit it for review to Twitter, which may take a couple of days.
Once the verification is complete, we can go ahead and create the app and start developing the code for the bot.&lt;/p&gt;
&lt;p&gt;In the next part of this story, we will look into the process of actually developing the bot and hosting it online so that it works round the clock tweeting out the latest stats on Covid cases.&lt;/p&gt;
&lt;p&gt;Stay tuned!&lt;/p&gt;
</description>
       </item>
       
     </channel>
   </rss>
